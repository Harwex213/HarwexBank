<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/HarwexBank;component/Styles/ToMainWindow/_Base.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <!-- - - - - - - - - - - - - - - - - - - - - -->
    <!-- INFO BLOCKS OF CREDIT/ACCOUNT -->
    <!-- - - - - - - - - - - - - - - - - - - - - -->
    
    <!-- TOGGLE BUTTONS -->
    <Style x:Key="InfoBlock" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ToggleButtonBase}">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="#000"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Stretch"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Border"
                            Background="#3D89A1"
                            CornerRadius="27.5">
                        <ContentPresenter
                            Margin="20"
                            RecognizesAccessKey="True"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#367D94"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- - - - - - - - - - - - - - - - - - - - - -->
    
    <!-- BUTTONS -->
    <Style x:Key="InfoBlockButtonBase" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="#FFF"></Setter>
        <Setter Property="FontWeight" Value="300"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
    </Style>
    
    <!-- Outer Buttons -->
    <Style x:Key="OuterButton" TargetType="{x:Type Button}" BasedOn="{StaticResource InfoBlockButtonBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                    x:Name="Border"
                    CornerRadius="23"
                    Background="#3D89A1">
                        <ContentPresenter
                        Margin="10"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        RecognizesAccessKey="True"/>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#316C7E" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#2C6172" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Inner Buttons -->
    <Style x:Key="InnerButton" TargetType="{x:Type Button}" BasedOn="{StaticResource InfoBlockButtonBase}">
        <Setter Property="Foreground" Value="#000"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        x:Name="Border"
                        CornerRadius="23"
                        Background="#FFF">
                        <ContentPresenter
                            Margin="10"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True"/>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#F2F2F2" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#EBEBEB" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- - - - - - - - - - - - - - - - - - - - - -->
    
    <!-- TEXT BOXES -->
    <Style x:Key="TextOfInfoBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockBase}">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="FontWeight" Value="300"></Setter>
    </Style>
    
    <Style x:Key="TittleText" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextOfInfoBlock}">
        <Setter Property="Foreground" Value="#FFF"></Setter>
    </Style>

    <Style x:Key="InfoText" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextOfInfoBlock}">
        <Setter Property="Margin" Value="0, 8.5, 0, 0"></Setter>
        <Setter Property="Foreground" Value="#D1D1D1"></Setter>
    </Style>
    
    <Style x:Key="AdditionalTittleText" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextOfInfoBlock}">
        <Setter Property="Foreground" Value="#D1D1D1"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
    </Style>
    <!-- - - - - - - - - - - - - - - - - - - - - -->
    
    <!-- TEXT BOXES AT CARD BLOCK IN ACCOUNT BLOCK INFO -->
    <Style x:Key="AdditionalTittleTextCardBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource AdditionalTittleText}">
        <Setter Property="Margin" Value="8.5"></Setter>
    </Style>
    
    <Style x:Key="CardNumberTextBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockBase}">
        <Setter Property="Foreground" Value="#FFFFFF"></Setter>
        <Setter Property="FontWeight" Value="500"></Setter>
    </Style>
    
    <Style x:Key="CardTypeTextBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockBase}">
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="Foreground" Value="#BABABA"></Setter>
        <Setter Property="FontWeight" Value="500"></Setter>
    </Style>
    <!-- - - - - - - - - - - - - - - - - - - - - -->
    
    <!-- - - - - - - - - - - - - - - - - - - - - -->
    
    <!-- - - - - - - - - - - - - - - - - - - - - -->
    <!-- CREATION FORMS TO: Open new Credit/Account, Make transfer, etc. -->
    <!-- - - - - - - - - - - - - - - - - - - - - -->
    
    <!-- COMBOBOX -->
      <!-- ComboBox button -->
      <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="20" />
          </Grid.ColumnDefinitions>
          <Border
            x:Name="Border" 
            Grid.ColumnSpan="2"
            CornerRadius="10"
            Background="#FFF"
            BorderThickness="1"
            BorderBrush="#C4C4C4"/>
          <Border 
            Grid.Column="0"
            CornerRadius="10"/>
          <Path 
            x:Name="Arrow"
            Grid.Column="1"     
            Fill="#C4C4C4"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
          <Trigger Property="ToggleButton.IsMouseOver" Value="true">
            <Setter TargetName="Border" Property="Background" Value="#FFF" />
          </Trigger>
          <Trigger Property="ToggleButton.IsChecked" Value="true">
            <Setter TargetName="Border" Property="Background" Value="#FFF" />
            <Setter TargetName="Border" Property="BorderThickness" Value="1, 1, 1, 0" />
            <Setter TargetName="Border" Property="CornerRadius" Value="10, 10, 0, 0" />
          </Trigger>
          <Trigger Property="IsEnabled" Value="False">
            <Setter Property="Foreground" Value="#FFF"/>
            <Setter TargetName="Arrow" Property="Fill" Value="#000" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>

      <!-- ComboBox text box -->
      <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
      </ControlTemplate>
      
      <!-- ComboBox -->
      <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="300"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="FontFamily" Value="Roboto"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="FontWeight" Value="300"></Setter>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="ComboBox">
              <Grid>
                <ToggleButton 
                  Name="ToggleButton" 
                  Template="{StaticResource ComboBoxToggleButton}"
                  Focusable="false"
                  IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                  ClickMode="Press">
                </ToggleButton>
                <ContentPresenter
                  Name="ContentSite"
                  IsHitTestVisible="False" 
                  Content="{TemplateBinding SelectionBoxItem}"
                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Center" />
                <TextBox x:Name="PART_EditableTextBox"
                  Style="{x:Null}" 
                  Template="{StaticResource ComboBoxTextBox}" 
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center" 
                  Margin="3,3,23,3"
                  Focusable="True" 
                  Background="Transparent"
                  Visibility="Hidden"
                  IsReadOnly="{TemplateBinding IsReadOnly}"/>
                <Popup 
                  Name="Popup"
                  Placement="Bottom"
                  IsOpen="{TemplateBinding IsDropDownOpen}"
                  AllowsTransparency="True" 
                  Focusable="False"
                  PopupAnimation="Slide">
                  <Grid 
                    Name="DropDown"
                    SnapsToDevicePixels="True"                
                    MinWidth="{TemplateBinding ActualWidth}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border 
                      x:Name="DropDownBorder"
                      Background="#FFF"
                      BorderThickness="1"
                      BorderBrush="#C4C4C4"/>
                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                      <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                    </ScrollViewer>
                  </Grid>
                </Popup>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="HasItems" Value="false">
                  <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                  <Setter Property="Foreground" Value="#000"/>
                </Trigger>
                <Trigger Property="IsGrouping" Value="true">
                  <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                  <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="10"/>
                  <Setter TargetName="DropDownBorder" Property="BorderThickness" Value="1, 0, 1, 1"/>
                  <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0, 0, 10, 10" />
                </Trigger>
                <Trigger Property="IsEditable"
                     Value="true">
                  <Setter Property="IsTabStop" Value="false"/>
                  <Setter TargetName="PART_EditableTextBox" Property="Visibility"	Value="Visible"/>
                  <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <!-- Combobox item -->
      <Style x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="ComboBoxItem">
              <Border 
                Name="Border"
                Padding="2"
                SnapsToDevicePixels="true">
                <ContentPresenter />
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="true">
                  <Setter Property="Foreground" Value="#6C6C6C"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                  <Setter Property="Foreground" Value="#000"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    <!-- - - - - - - -->
    
    <!-- TEXT BOX -->
    <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBoxBase}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MaxWidth" Value="400"></Setter>
        <Setter Property="FontFamily" Value="Roboto"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="FontWeight" Value="300"></Setter>
        <Setter Property="Foreground" Value="#232323"></Setter>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <TextBlock FontSize="10"
                                   FontFamily="Open Sans"
                                   FontWeight="Light"
                                   Foreground="#e6e6e6"
                                   Text="{Binding ElementName=placeholder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border 
                        Name="Border"
                        CornerRadius="10" 
                        Padding="4"
                        Background="#FFF" >
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <!-- <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/> -->
                            <!-- <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBackgroundBrush}"/> -->
                            <!-- <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/> -->
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="Border" Property="BorderThickness" Value="2" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#e80000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- - - - - - - -->
    
    
    <!-- BUTTONS -->
    <!-- SubmitFormButton -->
    <Style x:Key="SubmitFormButton" TargetType="{x:Type Button}" x:Shared="False" BasedOn="{StaticResource InnerButton}">
        <Setter Property="Margin" Value="25"></Setter>
        <Setter Property="MinWidth" Value="108"></Setter>
    </Style>
    <!-- - - - - - - -->
    
    
    <!-- TEXT BOXES -->
    <!-- CreationFormTittle -->
    <Style x:Key="CreationFormTittle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockBase}">
        <Setter Property="Foreground" Value="#FFFFFF"></Setter>
        <Setter Property="FontSize" Value="24"></Setter>
        <Setter Property="FontWeight" Value="300"></Setter>
    </Style>
    <!-- FormLabel -->
    <Style x:Key="FormLabel" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextOfInfoBlock}">
        <Setter Property="Foreground" Value="#FFFFFF"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="Margin" Value="0, 15, 0, 5"></Setter>
    </Style>
    <!-- - - - - - - -->
    
    <!-- - - - - - - - - - - - - - - - - - - - - -->
</ResourceDictionary>